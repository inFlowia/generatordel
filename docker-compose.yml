services:
  gendel_service_db:
    container_name: gendel_container_db
    hostname: $DB_HOSTNAME
    image: mysql:8.0.39-debian
    restart: always
    # Чем ниже строчка тем выше приоритет.
    #
    # Не делай так:
    # env_file:
    #  - .env
    #  - .env.local
    # environment:
    #      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
    # MYSQL_PWD подтянется только из .env а .env.local будет проигнорирован.
    # То есть если нужно задать переменную окружения, которая должна подтянуться
    # из файлов указанных в env_file, то указывай эту переменную в env-файлах
    # сразу с тем именем, которое требуется и не указывай её здесь в
    # environment.
    env_file:
      - .env
      - .env.test
      - .env.test.local

  gendel_service_php:
    container_name: gendel_container_php
    build:
      context: .
    working_dir: /usr/src/gendel
    volumes:
      - .:/usr/src/gendel
    command: >
      sh -c " if [ '${APP_ENV}' = 'prod' ]; then
                cp $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini;
              else
                cp $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini;
              fi
              # чтобы контейнер не закрывался
              tail -f /dev/null"

  gendel_composer:
    container_name: gendel_composer
    image: composer
    working_dir: /usr/src/gendel
    volumes:
      - .:/usr/src/gendel
    # чтобы контейнер не закрывался, временное
    command: tail -f /dev/null
    depends_on:
      - gendel_service_php